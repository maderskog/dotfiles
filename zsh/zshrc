# set -x
# Path to your oh-my-zsh configuration.
export ZSH=${HOME}/.oh-my-zsh

# Path to my custom stuff
export ZSH_CUSTOM=${HOME}/dotfiles/zsh/custom

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
export ZSH_THEME="michael"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
export DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
export COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(brew brew-cask colored-man-pages docker git gradle lein mix node npm sbt vagrant zsh-syntax-highlighting)

source ${ZSH}/oh-my-zsh.sh
#source ~/ansible/hacking/env-setup -q

function diff() {
  colordiff "$@"
}

function c() {
  clear
}

function ql() {
  qlmanage -p "$@" >& /dev/null &
}

function ssh-setup() {
  cat ~/.ssh/id_rsa.pub | ssh $1 'cat - >> ~/.ssh/authorized_keys';
}

function json() {
  cat $1 | jq
}

function xml() {
  xmllint --format $1 | pygmentize -l xml
}

function setjdk() {
  if [ $# -ne 0 ]; then
    removeJdkFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeJdkFromPath ${JAVA_HOME}
    fi
    export JAVA_HOME=`/usr/libexec/java_home -v $@`
    export PATH=${JAVA_HOME}/bin:${PATH}
    java -version
  else
    /usr/libexec/java_home --verbose
  fi
}

function removeJdkFromPath() {
  export PATH=$(echo ${PATH} | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

# Customize to your needs...
export ANSIBLE_INVENTORY=/etc/ansible/hosts
#export JAVA_HOME=$(/usr/libexec/java_home)
export GROOVY_HOME=/usr/local/opt/groovy/libexec
export GRAILS_HOME=/usr/local/opt/grails/libexec
export GRADLE_HOME=/usr/local/opt/gradle/libexec
export GOPATH=~/Development/Go
export SCALA_HOME=/usr/local/opt/scala/idea
export PATH=/usr/local/bin:/usr/bin:~/bin:/usr/local/opt/go/libexec/bin:/opt/chef/bin:/Applications/scala/bin:/Applications/dart/dart-sdk/bin:/Applications/vert.x/bin:~/anaconda/bin:$GOPATH/bin:$PATH

if [[ -f ~/.zshrc-local ]]; then
  . ~/.zshrc-local
fi

export fs="df -hP | awk '+\$5 >= 80 {print}'|grep -v nas0"

launchctl setenv PATH ${PATH}

#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
#[[ -s "~/.gvm/bin/gvm-init.sh" ]] && source "~/.gvm/bin/gvm-init.sh"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
