#!/bin/env

# Path to your oh-my-zsh configuration.
export ZSH=${HOME}/.oh-my-zsh

# Path to my custom stuff
export ZSH_CUSTOM=${HOME}/dotfiles/zsh/custom

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
export ZSH_THEME="michael"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment following line if you want to disable command autocorrection
export DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
export COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(brew brew-cask colored-man-pages docker gradle lein mix node npm sbt vagrant zsh-syntax-highlighting)

source ${ZSH}/oh-my-zsh.sh
#source ~/ansible/hacking/env-setup -q

function diff() {
  colordiff "$@"
}

function c() {
  clear
}

function ql() {
  qlmanage -p "$@" >& /dev/null &
}

function ssh-setup() {
  cat ~/.ssh/id_rsa.pub | ssh $1 'cat - >> ~/.ssh/authorized_keys';
}

function json() {
  cat $1 | jq -C '.'
}

function xml() {
  xmllint --format $1 | pygmentize -l xml
}

function setjdk() {
  if [ $# -ne 0 ]; then
    removeJdkFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeJdkFromPath ${JAVA_HOME}
    fi
    export JAVA_HOME=$(/usr/libexec/java_home -v "$@")
    export PATH=${JAVA_HOME}/bin:${PATH}
    java -version
  else
    /usr/libexec/java_home --verbose
  fi
}

# function removeJdkFromPath() {
#   export PATH=$(echo ${PATH} | sed -E -e "s;:$1;;" -e "s;$1:?;;")
# }

# Customize to your needs...
export ANSIBLE_INVENTORY=/etc/ansible/hosts
export JAVA_HOME=$(/usr/libexec/java_home)
#export GROOVY_HOME=/usr/local/opt/groovy/libexec
#export GRAILS_HOME=/usr/local/opt/grails/libexec
#export GRADLE_HOME=/usr/local/opt/gradle/libexec
#export GOPATH=~/Development/Go
#export SCALA_HOME=/usr/local/opt/scala/idea
#export ORACLE_HOME=/Applications/oracle/product/instantclient_64/12.1.0.2.0
export PATH=/usr/local/bin
export PATH=$PATH:/usr/local/opt/ruby/bin
export PATH=$PATH:/usr/local/lib/ruby/gems/2.6.0/bin
export PATH=$PATH:~/bin
export PATH=$PATH:/usr/bin
export PATH=$PATH:/bin
export PATH=$PATH:/usr/sbin
export PATH=$PATH:/sbin
export PATH=$PATH:/Library/Frameworks/Python.framework/Versions/3.7/bin
export PATH=$PATH:/Applications/'VMware Fusion.app'/Contents/Public
#export PATH=$PATH:/usr/local/opt/go/libexec/bin
#export PATH=$PATH:/opt/chef/bin
#export PATH=$PATH:/Applications/scala/bin
#export PATH=$PATH:/Applications/dart/dart-sdk/bin
#export PATH=$PATH:/Applications/vert.x/bin
#export PATH=$PATH:~/anaconda/bin
#export PATH=$PATH:$GOPATH/bin
#export PATH=$ORACLE_HOME/bin:$PATH
#export DYLD_LIBRARY_PATH=$ORACLE_HOME/lib
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

if [[ -f ~/.zshrc-local ]]; then
  source ~/.zshrc-local
fi

export fs="df -hP | awk '+\$5 >= 80 {print}'|grep -v nas0"

compdef gpg2=gpg

launchctl setenv PATH ${PATH}

alias python="python3"
alias vi="mvim -v"

#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
#[[ -s "~/.gvm/bin/gvm-init.sh" ]] && source "~/.gvm/bin/gvm-init.sh"

#test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
